syntax = "proto3";

package forum;

option go_package = "backend.com/forum/proto";

import "google/protobuf/timestamp.proto";


service ForumService {
  
    rpc CreateCategory (CreateCategoryRequest) returns (CreateCategoryResponse);
    rpc GetCategory (GetCategoryRequest) returns (GetCategoryResponse);
    
 
    rpc CreateTopic (CreateTopicRequest) returns (CreateTopicResponse);
    rpc GetTopic (GetTopicRequest) returns (GetTopicResponse);
    
  
    rpc CreateMessage (CreateMessageRequest) returns (CreateMessageResponse);
    rpc GetMessage (GetMessageRequest) returns (GetMessageResponse);
    

    rpc CreatePost (CreatePostRequest) returns (CreatePostResponse);
    rpc GetPosts (GetPostsRequest) returns (GetPostsResponse);
    
   
    rpc CreateChatMessage (CreateChatMessageRequest) returns (CreateChatMessageResponse);
    rpc StreamChatMessages (StreamChatMessagesRequest) returns (stream ChatMessage);
}


message Category {
    int64 id = 1;
    string name = 2;
    string description = 3;
    google.protobuf.Timestamp created_at = 4;
}

message Topic {
    int64 id = 1;
    int64 category_id = 2;
    string title = 3;
    int64 user_id = 4;
    google.protobuf.Timestamp created_at = 5;
}
message TokenRequest {
    string token = 1;
  }
message Message {
    int64 id = 1;
    int64 topic_id = 2;
    int64 user_id = 3;
    string content = 4;
    google.protobuf.Timestamp created_at = 5;
}

message Post {
    int64 id = 1;
    string title = 2;
    string content = 3;
    int64 author_id = 4;
    google.protobuf.Timestamp created_at = 5;
}

message ChatMessage {
    int64 id = 1;
    int64 user_id = 2;
    string username = 3;  
    string content = 4;
    google.protobuf.Timestamp created_at = 5;
}


message CreateCategoryRequest {
    string name = 1;
    string description = 2;
}

message CreateCategoryResponse {
    int64 id = 1;
}

message GetCategoryRequest {
    int64 id = 1;
}

message GetCategoryResponse {
    Category category = 1;
}

// Запросы и ответы для тем
message CreateTopicRequest {
    int64 category_id = 1;
    string title = 2;
    int64 user_id = 3;
}

message CreateTopicResponse {
    int64 id = 1;
}

message GetTopicRequest {
    int64 id = 1;
}

message GetTopicResponse {
    Topic topic = 1;
}


message CreateMessageRequest {
    int64 topic_id = 1;
    int64 user_id = 2;
    string content = 3;
}

message CreateMessageResponse {
    int64 id = 1;
}

message GetMessageRequest {
    int64 id = 1;
}

message GetMessageResponse {
    Message message = 1;
}


message CreatePostRequest {
    string title = 1;
    string content = 2;
    int64 author_id = 3;
}

message CreatePostResponse {
    int64 id = 1;
    Post post = 2;
}

message GetPostsRequest {
    // Можно добавить параметры пагинации или фильтрации
    int32 limit = 1;
    int32 offset = 2;
}

message GetPostsResponse {
    repeated Post posts = 1;
}

// Запросы и ответы для чата
message CreateChatMessageRequest {
    int64 user_id = 1;
    string content = 2;
}

message CreateChatMessageResponse {
    int64 id = 1;
}

message StreamChatMessagesRequest {
    // Пустой запрос для начала стриминга
}
