{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [userCache, setUserCache] = useState({});\n  const token = localStorage.getItem('token');\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n\n  // Получение информации о пользователе\n  const fetchUser = useCallback(async userId => {\n    try {\n      if (!userId || userCache[userId]) return;\n      const response = await axios.get(`http://localhost:8081/api/v1/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserCache(prev => ({\n        ...prev,\n        [userId]: response.data.username || `User #${userId}`\n      }));\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      setUserCache(prev => ({\n        ...prev,\n        [userId]: `User #${userId}`\n      }));\n    }\n  }, [token, userCache]);\n\n  // Получение комментариев\n  const fetchComments = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:8081/api/v1/posts/${postId}/comments`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const processedComments = await Promise.all(response.data.map(async comment => {\n        if (!userCache[comment.author_id]) {\n          await fetchUser(comment.author_id);\n        }\n        return {\n          ...comment,\n          username: userCache[comment.author_id] || `User #${comment.author_id}`\n        };\n      }));\n      setComments(processedComments);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [postId, token, userCache, fetchUser]);\n\n  // Создание комментария\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    try {\n      const response = await axios.post(`http://localhost:8081/api/v1/posts/${postId}/comments`, {\n        content: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const newCommentWithAuthor = {\n        ...response.data,\n        username: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username) || `User #${response.data.username}`\n      };\n      setComments(prev => [newCommentWithAuthor, ...prev]);\n      setNewComment('');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message);\n    }\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Comments (\", comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-comment-btn\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-author\",\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-content\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"VJSiGtmrk1WTzSqFGW9YWtNgYlQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Comments","postId","_s","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","userCache","setUserCache","token","localStorage","getItem","currentUser","JSON","parse","fetchUser","userId","response","get","headers","Authorization","prev","data","username","console","fetchComments","processedComments","Promise","all","map","comment","author_id","err","_err$response","_err$response$data","message","handleSubmitComment","e","preventDefault","trim","post","content","newCommentWithAuthor","_err$response2","_err$response2$data","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","type","id","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/Comment.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\nconst Comments = ({ postId }) => {\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [userCache, setUserCache] = useState({});\n    \n    const token = localStorage.getItem('token');\n    const currentUser = JSON.parse(localStorage.getItem('user'));\n\n    // Получение информации о пользователе\n    const fetchUser = useCallback(async (userId) => {\n        try {\n            if (!userId || userCache[userId]) return;\n            \n            const response = await axios.get(`http://localhost:8081/api/v1/users/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            \n            setUserCache(prev => ({\n                ...prev,\n                [userId]: response.data.username || `User #${userId}`\n            }));\n        } catch (error) {\n            console.error('Error fetching user:', error);\n            setUserCache(prev => ({\n                ...prev,\n                [userId]: `User #${userId}`\n            }));\n        }\n    }, [token, userCache]);\n\n    // Получение комментариев\n    const fetchComments = useCallback(async () => {\n        try {\n            setLoading(true);\n            const response = await axios.get(\n                `http://localhost:8081/api/v1/posts/${postId}/comments`,\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n\n            const processedComments = await Promise.all(\n                response.data.map(async comment => {\n                    if (!userCache[comment.author_id]) {\n                        await fetchUser(comment.author_id);\n                    }\n                    return {\n                        ...comment,\n                        username: userCache[comment.author_id] || `User #${comment.author_id}`\n                    };\n                })\n            );\n\n            setComments(processedComments);\n        } catch (err) {\n            setError(err.response?.data?.error || err.message);\n        } finally {\n            setLoading(false);\n        }\n    }, [postId, token, userCache, fetchUser]);\n\n    // Создание комментария\n    const handleSubmitComment = async (e) => {\n        e.preventDefault();\n        if (!newComment.trim()) return;\n\n        try {\n            const response = await axios.post(\n                `http://localhost:8081/api/v1/posts/${postId}/comments`,\n                { content: newComment },\n                { headers: { \n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json' \n                }}\n            );\n\n            const newCommentWithAuthor = {\n                ...response.data,\n                username: currentUser?.username || `User #${response.data.username}`\n            };\n\n            setComments(prev => [newCommentWithAuthor, ...prev]);\n            setNewComment('');\n        } catch (err) {\n            setError(err.response?.data?.error || err.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchComments();\n    }, [fetchComments]);\n\n    return (\n        <div className=\"comments-section\">\n            <h4>Comments ({comments.length})</h4>\n            \n            <form onSubmit={handleSubmitComment} className=\"comment-form\">\n                <textarea\n                    value={newComment}\n                    onChange={(e) => setNewComment(e.target.value)}\n                    placeholder=\"Write a comment...\"\n                    rows=\"3\"\n                />\n                <button type=\"submit\" className=\"submit-comment-btn\">\n                    Post Comment\n                </button>\n            </form>\n\n            {loading && <div>Loading comments...</div>}\n            {error && <div className=\"error\">{error}</div>}\n\n            <div className=\"comments-list\">\n                {comments.map(comment => (\n                    <div key={comment.id} className=\"comment-item\">\n                        <div className=\"comment-header\">\n                            <span className=\"comment-author\">\n                                {comment.username}\n                            </span>\n                        </div>\n                        <p className=\"comment-content\">{comment.content}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Comments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}