{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from 'react';\nconst useWebSocket = (url, options = {}) => {\n  _s();\n  const {\n    manual = false,\n    reconnectInterval = 5000\n  } = options;\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const reconnectAttempts = useRef(0);\n  const connect = useCallback(newUrl => {\n    if (socket && [WebSocket.OPEN, WebSocket.CONNECTING].includes(socket.readyState)) {\n      return;\n    }\n    const ws = new WebSocket(newUrl || url);\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n      reconnectAttempts.current = 0;\n      setSocket(ws);\n      setConnectionStatus('connected');\n    };\n    ws.onmessage = event => {\n      try {\n        const newMessage = JSON.parse(event.data);\n        setMessages(prev => [...prev, newMessage]);\n      } catch (err) {\n        console.error('Error parsing message:', err);\n      }\n    };\n    ws.onclose = event => {\n      console.log('WebSocket closed:', event.code, event.reason);\n      setSocket(null);\n      setConnectionStatus('disconnected');\n      if (event.code !== 1000 && reconnectAttempts.current < 3) {\n        reconnectAttempts.current += 1;\n        setTimeout(() => {\n          setConnectionStatus('reconnecting');\n          connect(newUrl || url);\n        }, reconnectInterval);\n      }\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      setConnectionStatus('error');\n    };\n    setConnectionStatus('connecting');\n    setSocket(ws);\n  }, [url, reconnectInterval]);\n  const disconnect = useCallback(() => {\n    if (socket) {\n      socket.close(1000, 'User initiated disconnect');\n      setSocket(null);\n      setConnectionStatus('disconnected');\n    }\n  }, [socket]);\n  useEffect(() => {\n    if (!manual) {\n      connect();\n    }\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect, manual]);\n  const sendMessage = message => {\n    if ((socket === null || socket === void 0 ? void 0 : socket.readyState) === WebSocket.OPEN) {\n      socket.send(JSON.stringify(message));\n      return true;\n    }\n    console.error('Cannot send message - connection not open');\n    return false;\n  };\n  return {\n    socket,\n    messages,\n    sendMessage,\n    connectionStatus,\n    connect,\n    disconnect\n  };\n};\n_s(useWebSocket, \"hIt5Oq1C0WS3TR/q1GBQpuwR4gg=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","useWebSocket","url","options","_s","manual","reconnectInterval","socket","setSocket","messages","setMessages","connectionStatus","setConnectionStatus","reconnectAttempts","connect","newUrl","WebSocket","OPEN","CONNECTING","includes","readyState","ws","onopen","console","log","current","onmessage","event","newMessage","JSON","parse","data","prev","err","error","onclose","code","reason","setTimeout","onerror","disconnect","close","sendMessage","message","send","stringify"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\n\nconst useWebSocket = (url, options = {}) => {\n  const { manual = false, reconnectInterval = 5000 } = options;\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const reconnectAttempts = useRef(0);\n\n  const connect = useCallback((newUrl) => {\n    if (socket && [WebSocket.OPEN, WebSocket.CONNECTING].includes(socket.readyState)) {\n      return;\n    }\n\n    const ws = new WebSocket(newUrl || url);\n    \n    ws.onopen = () => {\n      console.log('WebSocket connected');\n      reconnectAttempts.current = 0;\n      setSocket(ws);\n      setConnectionStatus('connected');\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const newMessage = JSON.parse(event.data);\n        setMessages(prev => [...prev, newMessage]);\n      } catch (err) {\n        console.error('Error parsing message:', err);\n      }\n    };\n\n    ws.onclose = (event) => {\n      console.log('WebSocket closed:', event.code, event.reason);\n      setSocket(null);\n      setConnectionStatus('disconnected');\n\n      if (event.code !== 1000 && reconnectAttempts.current < 3) {\n        reconnectAttempts.current += 1;\n        setTimeout(() => {\n          setConnectionStatus('reconnecting');\n          connect(newUrl || url);\n        }, reconnectInterval);\n      }\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      setConnectionStatus('error');\n    };\n\n    setConnectionStatus('connecting');\n    setSocket(ws);\n  }, [url, reconnectInterval]);\n\n  const disconnect = useCallback(() => {\n    if (socket) {\n      socket.close(1000, 'User initiated disconnect');\n      setSocket(null);\n      setConnectionStatus('disconnected');\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    if (!manual) {\n      connect();\n    }\n\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect, manual]);\n\n  const sendMessage = (message) => {\n    if (socket?.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(message));\n      return true;\n    }\n    console.error('Cannot send message - connection not open');\n    return false;\n  };\n\n  return {\n    socket,\n    messages,\n    sendMessage,\n    connectionStatus,\n    connect,\n    disconnect\n  };\n};\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}