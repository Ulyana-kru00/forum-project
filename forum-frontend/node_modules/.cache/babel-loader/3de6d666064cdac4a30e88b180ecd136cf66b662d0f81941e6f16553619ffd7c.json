{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [login, setLogin] = useState(''); // Изменено с username на login\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/login', {\n        login,\n        // Исправлено с username на login\n        password\n      });\n      const token = response.data.token;\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const payload = JSON.parse(atob(base64));\n      localStorage.setItem('token', token);\n      localStorage.setItem('userId', payload.user_id);\n      localStorage.setItem('username', payload.username);\n      navigate('/posts');\n    } catch (error) {\n      console.error('Login failed:', error);\n      alert('Login failed. Please check your credentials.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Login\" // Изменено с Username на Login\n      ,\n      value: login,\n      onChange: e => setLogin(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"f1Up5sUSA9c71Nwa8sYiT3vqSAs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleLogin = async () => {\n//         try {\n//             const response = await axios.post('http://localhost:8080/login', { username, password });\n//             console.log('Login response:', response.data);\n//             const token = response.data.token;\n//             localStorage.setItem('token', token);\n\n//             // Распарсить user_id из токена\n//             const base64Url = token.split('.')[1];\n//             const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n//             const payload = JSON.parse(atob(base64));\n//             console.log(payload);\n//             localStorage.setItem('userId', String(payload.user_id));\n//             localStorage.setItem('username', response.data.username);\n//             localStorage.setItem('userRole', payload.role); \n\n//         console.log('User role:', payload.role);\n//             navigate('/posts');\n//         } catch (error) {\n//             console.error('Login failed:', error);\n//             alert('Login failed. Please check your credentials.');\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-container\"> {/* Добавьте класс для стилизации */}\n//             <h2>Login</h2>\n//             <input  //Заменил Input на input и добавил className\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//             />\n//             <input //Заменил Input на input и добавил className\n//                 type=\"password\"\n//                 className=\"form-control\"\n//                 placeholder=\"Password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n//             <button className=\"btn btn-primary\" onClick={handleLogin}>Login</button>\n//         </div>\n//     );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","login","setLogin","password","setPassword","navigate","handleLogin","response","post","token","data","base64Url","split","base64","replace","payload","JSON","parse","atob","localStorage","setItem","user_id","username","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\nconst Login = () => {\n    const [login, setLogin] = useState(''); // Изменено с username на login\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = async () => {\n        try {\n            const response = await axios.post(\n                'http://localhost:8080/login', \n                { \n                    login, // Исправлено с username на login\n                    password \n                }\n            );\n            \n            const token = response.data.token;\n            const base64Url = token.split('.')[1];\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n            const payload = JSON.parse(atob(base64));\n            \n            localStorage.setItem('token', token);\n            localStorage.setItem('userId',payload.user_id);\n            localStorage.setItem('username', payload.username);\n            \n            navigate('/posts');\n        } catch (error) {\n            console.error('Login failed:', error);\n            alert('Login failed. Please check your credentials.');\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <h2>Login</h2>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Login\" // Изменено с Username на Login\n                value={login}\n                onChange={(e) => setLogin(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button className=\"btn btn-primary\" onClick={handleLogin}>\n                Login\n            </button>\n        </div>\n    );\n};\n\nexport default Login;\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const Login = () => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleLogin = async () => {\n//         try {\n//             const response = await axios.post('http://localhost:8080/login', { username, password });\n//             console.log('Login response:', response.data);\n//             const token = response.data.token;\n//             localStorage.setItem('token', token);\n\n//             // Распарсить user_id из токена\n//             const base64Url = token.split('.')[1];\n//             const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n//             const payload = JSON.parse(atob(base64));\n//             console.log(payload);\n//             localStorage.setItem('userId', String(payload.user_id));\n//             localStorage.setItem('username', response.data.username);\n//             localStorage.setItem('userRole', payload.role); \n            \n//         console.log('User role:', payload.role);\n//             navigate('/posts');\n//         } catch (error) {\n//             console.error('Login failed:', error);\n//             alert('Login failed. Please check your credentials.');\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-container\"> {/* Добавьте класс для стилизации */}\n//             <h2>Login</h2>\n//             <input  //Заменил Input на input и добавил className\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 placeholder=\"Username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//             />\n//             <input //Заменил Input на input и добавил className\n//                 type=\"password\"\n//                 className=\"form-control\"\n//                 placeholder=\"Password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//             />\n//             <button className=\"btn btn-primary\" onClick={handleLogin}>Login</button>\n//         </div>\n//     );\n// };\n\n// export default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}