{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const messagesEndRef = useRef(null);\n  const token = localStorage.getItem('token');\n  const username = localStorage.getItem('username');\n  const isAuthenticated = !!token;\n  const {\n    sendMessage,\n    lastMessage\n  } = useWebSocket('ws://localhost:8082/ws', {\n    onOpen: () => {\n      console.log('WebSocket connection established');\n      setConnectionStatus('connected');\n      setError(null);\n    },\n    onClose: () => {\n      console.log('WebSocket connection closed');\n      setConnectionStatus('disconnected');\n      setError('Connection lost. Reconnecting...');\n    },\n    onError: event => {\n      console.error('WebSocket error:', event);\n      setConnectionStatus('error');\n      setError('Failed to connect to chat server');\n    },\n    shouldReconnect: () => true,\n    reconnectAttempts: 10,\n    reconnectInterval: 3000\n  });\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:8082/messages');\n        setMessages(response.data || []);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n        setError('Failed to load chat history');\n        setIsLoading(false);\n      }\n    };\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      try {\n        const newMessage = JSON.parse(lastMessage.data);\n        setMessages(prev => [...prev, newMessage]);\n      } catch (err) {\n        console.error('Error parsing message:', err);\n      }\n    }\n  }, [lastMessage]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    if (!message.trim()) return;\n    const msg = {\n      username: username || 'Anonymous',\n      message: message.trim(),\n      timestamp: new Date().toISOString()\n    };\n    sendMessage(JSON.stringify(msg));\n    setMessage('');\n  };\n  const connectionStatusColors = {\n    connecting: 'orange',\n    connected: 'green',\n    disconnected: 'red',\n    error: 'red'\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"Loading chat...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chat-title\",\n        children: \"Community Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${connectionStatus}`,\n        children: connectionStatus.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-window\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-username\",\n            children: msg.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: new Date(msg.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: isAuthenticated ? \"Type your message...\" : \"Login to participate\",\n        disabled: !isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isAuthenticated,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), !isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-prompt\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 23\n          }, this), \" to join the conversation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n_s(Chat, \"iKIx2g6rzv3l5DzuAnuayBZsF60=\", false, function () {\n  return [useNavigate, useWebSocket];\n});\n_c = Chat;\nexport default Chat;\n// src/Chat.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import useWebSocket from 'react-use-websocket';\n// import axios from 'axios';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   const { sendMessage, lastMessage } = useWebSocket('ws://localhost:8082/ws');\n//   const usernames = localStorage.getItem(\"username\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     // Загрузка сообщений из базы данных при инициализации\n//     const fetchMessages = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8082/messages');\n//         setMessages(response.data);\n//       } catch (error) {\n//         console.error('Error fetching messages:', error);\n//       }\n//     };\n\n//     fetchMessages();\n//   }, []);\n\n//   useEffect(() => {\n//     if (lastMessage !== null) {\n//       setMessages((prevMessages) => {\n//         if (Array.isArray(prevMessages)) {\n//           return [...prevMessages, JSON.parse(lastMessage.data)];\n//         } else {\n//           return [JSON.parse(lastMessage.data)];\n//         }\n//       });\n//     }\n//   }, [lastMessage]);\n\n//   useEffect(() => {\n//     // Прокрутка вниз при добавлении нового сообщения\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = () => {\n//     const msg = { username: usernames, message };\n//     sendMessage(JSON.stringify(msg));\n//     setMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"connection-status connected\">\n//         Чатик\n//       </div>\n//       <div className=\"messages\">\n//         {messages && messages.length > 0 ? (\n//           messages.map((msg, index) => (\n//             <div key={index} className=\"message\">\n//               <span className=\"user\">{msg.username}:</span>\n//               <span>{msg.message}</span>\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"message system\">No messages yet.</div>\n//         )}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"message-form\">\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//         />\n//         <button onClick={handleSendMessage} disabled={!message.trim()}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebSocket","axios","useNavigate","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","connectionStatus","setConnectionStatus","error","setError","isLoading","setIsLoading","navigate","messagesEndRef","token","localStorage","getItem","username","isAuthenticated","sendMessage","lastMessage","onOpen","console","log","onClose","onError","event","shouldReconnect","reconnectAttempts","reconnectInterval","fetchMessages","response","get","data","newMessage","JSON","parse","prev","err","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","msg","timestamp","Date","toISOString","stringify","connectionStatusColors","connecting","connected","disconnected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","map","index","toLocaleTimeString","hour","minute","ref","type","placeholder","disabled","href","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\nconst Chat = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [connectionStatus, setConnectionStatus] = useState('connecting');\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n    const messagesEndRef = useRef(null);\n\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    const isAuthenticated = !!token;\n\n    const { sendMessage, lastMessage } = useWebSocket(\n        'ws://localhost:8082/ws',\n        {\n            onOpen: () => {\n                console.log('WebSocket connection established');\n                setConnectionStatus('connected');\n                setError(null);\n            },\n            onClose: () => {\n                console.log('WebSocket connection closed');\n                setConnectionStatus('disconnected');\n                setError('Connection lost. Reconnecting...');\n            },\n            onError: (event) => {\n                console.error('WebSocket error:', event);\n                setConnectionStatus('error');\n                setError('Failed to connect to chat server');\n            },\n            shouldReconnect: () => true,\n            reconnectAttempts: 10,\n            reconnectInterval: 3000,\n        }\n    );\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            try {\n                const response = await axios.get('http://localhost:8082/messages');\n                setMessages(response.data || []);\n                setIsLoading(false);\n            } catch (error) {\n                console.error('Error fetching messages:', error);\n                setError('Failed to load chat history');\n                setIsLoading(false);\n            }\n        };\n\n        fetchMessages();\n    }, []);\n\n    useEffect(() => {\n        if (lastMessage !== null) {\n            try {\n                const newMessage = JSON.parse(lastMessage.data);\n                setMessages(prev => [...prev, newMessage]);\n            } catch (err) {\n                console.error('Error parsing message:', err);\n            }\n        }\n    }, [lastMessage]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const handleSendMessage = () => {\n        if (!isAuthenticated) {\n            navigate('/login');\n            return;\n        }\n\n        if (!message.trim()) return;\n\n        const msg = {\n            username: username || 'Anonymous',\n            message: message.trim(),\n            timestamp: new Date().toISOString()\n        };\n\n        sendMessage(JSON.stringify(msg));\n        setMessage('');\n    };\n\n    const connectionStatusColors = {\n        connecting: 'orange',\n        connected: 'green',\n        disconnected: 'red',\n        error: 'red'\n    };\n\n    if (isLoading) {\n        return (\n            <div className=\"chat-container\">\n                <div className=\"loading-message\">Loading chat...</div>\n            </div>\n        );\n    }\n\n    return (\n      <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h2 className=\"chat-title\">Community Chat</h2>\n        <div className={`connection-status ${connectionStatus}`}>\n          {connectionStatus.toUpperCase()}\n        </div>\n      </div>\n    \n      <div className=\"messages-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className=\"message\">\n            <div className=\"message-header\">\n              <span className=\"message-username\">{msg.username}</span>\n              <span className=\"message-time\">\n                {new Date(msg.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n              </span>\n            </div>\n            <div className=\"message-content\">{msg.message}</div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n    \n      <div className=\"message-input-area\">\n        <input\n          type=\"text\"\n          placeholder={isAuthenticated ? \"Type your message...\" : \"Login to participate\"}\n          disabled={!isAuthenticated}\n        />\n        <button disabled={!isAuthenticated}>\n          Send\n        </button>\n        \n        {!isAuthenticated && (\n          <div className=\"login-prompt\">\n            <p>Please <a href=\"/login\">login</a> to join the conversation</p>\n          </div>\n        )}\n      </div>\n    </div>\n    );\n};\n\nexport default Chat;\n // src/Chat.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import useWebSocket from 'react-use-websocket';\n// import axios from 'axios';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   const { sendMessage, lastMessage } = useWebSocket('ws://localhost:8082/ws');\n//   const usernames = localStorage.getItem(\"username\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     // Загрузка сообщений из базы данных при инициализации\n//     const fetchMessages = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8082/messages');\n//         setMessages(response.data);\n//       } catch (error) {\n//         console.error('Error fetching messages:', error);\n//       }\n//     };\n\n//     fetchMessages();\n//   }, []);\n\n//   useEffect(() => {\n//     if (lastMessage !== null) {\n//       setMessages((prevMessages) => {\n//         if (Array.isArray(prevMessages)) {\n//           return [...prevMessages, JSON.parse(lastMessage.data)];\n//         } else {\n//           return [JSON.parse(lastMessage.data)];\n//         }\n//       });\n//     }\n//   }, [lastMessage]);\n\n//   useEffect(() => {\n//     // Прокрутка вниз при добавлении нового сообщения\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = () => {\n//     const msg = { username: usernames, message };\n//     sendMessage(JSON.stringify(msg));\n//     setMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"connection-status connected\">\n//         Чатик\n//       </div>\n//       <div className=\"messages\">\n//         {messages && messages.length > 0 ? (\n//           messages.map((msg, index) => (\n//             <div key={index} className=\"message\">\n//               <span className=\"user\">{msg.username}:</span>\n//               <span>{msg.message}</span>\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"message system\">No messages yet.</div>\n//         )}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"message-form\">\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//         />\n//         <button onClick={handleSendMessage} disabled={!message.trim()}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sFAAsF;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,YAAY,CAAC;EACtE,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMoB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,cAAc,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAME,eAAe,GAAG,CAAC,CAACJ,KAAK;EAE/B,MAAM;IAAEK,WAAW;IAAEC;EAAY,CAAC,GAAGzB,YAAY,CAC7C,wBAAwB,EACxB;IACI0B,MAAM,EAAEA,CAAA,KAAM;MACVC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/ChB,mBAAmB,CAAC,WAAW,CAAC;MAChCE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC;IACDe,OAAO,EAAEA,CAAA,KAAM;MACXF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1ChB,mBAAmB,CAAC,cAAc,CAAC;MACnCE,QAAQ,CAAC,kCAAkC,CAAC;IAChD,CAAC;IACDgB,OAAO,EAAGC,KAAK,IAAK;MAChBJ,OAAO,CAACd,KAAK,CAAC,kBAAkB,EAAEkB,KAAK,CAAC;MACxCnB,mBAAmB,CAAC,OAAO,CAAC;MAC5BE,QAAQ,CAAC,kCAAkC,CAAC;IAChD,CAAC;IACDkB,eAAe,EAAEA,CAAA,KAAM,IAAI;IAC3BC,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAE;EACvB,CACJ,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACZ,MAAMqC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMnC,KAAK,CAACoC,GAAG,CAAC,gCAAgC,CAAC;QAClE3B,WAAW,CAAC0B,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC;QAChCtB,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZc,OAAO,CAACd,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,QAAQ,CAAC,6BAA6B,CAAC;QACvCE,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDmB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENrC,SAAS,CAAC,MAAM;IACZ,IAAI2B,WAAW,KAAK,IAAI,EAAE;MACtB,IAAI;QACA,MAAMc,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAChB,WAAW,CAACa,IAAI,CAAC;QAC/C5B,WAAW,CAACgC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,UAAU,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVhB,OAAO,CAACd,KAAK,CAAC,wBAAwB,EAAE8B,GAAG,CAAC;MAChD;IACJ;EACJ,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjB3B,SAAS,CAAC,MAAM;IAAA,IAAA8C,qBAAA;IACZ,CAAAA,qBAAA,GAAA1B,cAAc,CAAC2B,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC,EAAE,CAACtC,QAAQ,CAAC,CAAC;EAEd,MAAMuC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACzB,eAAe,EAAE;MAClBN,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACJ;IAEA,IAAI,CAACV,OAAO,CAAC0C,IAAI,CAAC,CAAC,EAAE;IAErB,MAAMC,GAAG,GAAG;MACR5B,QAAQ,EAAEA,QAAQ,IAAI,WAAW;MACjCf,OAAO,EAAEA,OAAO,CAAC0C,IAAI,CAAC,CAAC;MACvBE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACtC,CAAC;IAED7B,WAAW,CAACgB,IAAI,CAACc,SAAS,CAACJ,GAAG,CAAC,CAAC;IAChC1C,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAM+C,sBAAsB,GAAG;IAC3BC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,OAAO;IAClBC,YAAY,EAAE,KAAK;IACnB7C,KAAK,EAAE;EACX,CAAC;EAED,IAAIE,SAAS,EAAE;IACX,oBACIX,OAAA;MAAKuD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BxD,OAAA;QAAKuD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAEd;EAEA,oBACE5D,OAAA;IAAKuD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC/BxD,OAAA;MAAKuD,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BxD,OAAA;QAAIuD,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C5D,OAAA;QAAKuD,SAAS,EAAE,qBAAqBhD,gBAAgB,EAAG;QAAAiD,QAAA,EACrDjD,gBAAgB,CAACsD,WAAW,CAAC;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7BnD,QAAQ,CAACyD,GAAG,CAAC,CAAChB,GAAG,EAAEiB,KAAK,kBACvB/D,OAAA;QAAiBuD,SAAS,EAAC,SAAS;QAAAC,QAAA,gBAClCxD,OAAA;UAAKuD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BxD,OAAA;YAAMuD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEV,GAAG,CAAC5B;UAAQ;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxD5D,OAAA;YAAMuD,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC3B,IAAIR,IAAI,CAACF,GAAG,CAACC,SAAS,CAAC,CAACiB,kBAAkB,CAAC,EAAE,EAAE;cAACC,IAAI,EAAE,SAAS;cAAEC,MAAM,EAAC;YAAS,CAAC;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN5D,OAAA;UAAKuD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEV,GAAG,CAAC3C;QAAO;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAP5CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN,CAAC,eACF5D,OAAA;QAAKmE,GAAG,EAAErD;MAAe;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCxD,OAAA;QACEoE,IAAI,EAAC,MAAM;QACXC,WAAW,EAAElD,eAAe,GAAG,sBAAsB,GAAG,sBAAuB;QAC/EmD,QAAQ,EAAE,CAACnD;MAAgB;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF5D,OAAA;QAAQsE,QAAQ,EAAE,CAACnD,eAAgB;QAAAqC,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAER,CAACzC,eAAe,iBACfnB,OAAA;QAAKuD,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BxD,OAAA;UAAAwD,QAAA,GAAG,SAAO,eAAAxD,OAAA;YAAGuE,IAAI,EAAC,QAAQ;YAAAf,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,6BAAyB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CA/IID,IAAI;EAAA,QAMWH,WAAW,EAOSF,YAAY;AAAA;AAAA4E,EAAA,GAb/CvE,IAAI;AAiJV,eAAeA,IAAI;AAClB;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}