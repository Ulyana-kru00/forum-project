{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nexport function useWebSocket(url) {\n  _s();\n  const socketRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!url) {\n      console.error(\"WebSocket URL is required.\");\n      return;\n    }\n\n    // Создаем новое подключение\n    socketRef.current = new WebSocket(url);\n\n    // Событие: подключение открыто\n    socketRef.current.onopen = () => {\n      console.log('WebSocket connection opened:', url);\n      setIsConnected(true);\n    };\n\n    // Событие: получено сообщение\n    socketRef.current.onmessage = event => {\n      console.log('WebSocket message received:', event.data);\n      setMessages(prevMessages => [...prevMessages, event.data]);\n    };\n\n    // Событие: ошибка соединения\n    socketRef.current.onerror = event => {\n      console.error('WebSocket error:', event, `URL: ${url}`);\n      setError('WebSocket encountered an error');\n    };\n\n    // Событие: соединение закрыто\n    socketRef.current.onclose = event => {\n      console.warn('WebSocket closed:', event.code, event.reason);\n      setIsConnected(false);\n\n      // Можно добавить авто-переподключение здесь\n      // Например:\n      // setTimeout(() => {\n      //   connect();\n      // }, 5000);\n    };\n\n    // Очистка при размонтировании компонента\n    return () => {\n      var _socketRef$current;\n      console.log('Cleaning up WebSocket connection');\n      (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.close();\n    };\n  }, [url]); // Пересоздание подключения только если меняется URL\n\n  // Функция отправки сообщения\n  const sendMessage = message => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(message);\n    } else {\n      var _socketRef$current2;\n      console.error('WebSocket is not open. ReadyState:', (_socketRef$current2 = socketRef.current) === null || _socketRef$current2 === void 0 ? void 0 : _socketRef$current2.readyState);\n    }\n  };\n  return {\n    isConnected,\n    messages,\n    sendMessage,\n    error\n  };\n}\n_s(useWebSocket, \"xPXvAkfZhSYBUfBhHf46s5aYfio=\");","map":{"version":3,"names":["useEffect","useRef","useState","useWebSocket","url","_s","socketRef","isConnected","setIsConnected","messages","setMessages","error","setError","console","current","WebSocket","onopen","log","onmessage","event","data","prevMessages","onerror","onclose","warn","code","reason","_socketRef$current","close","sendMessage","message","readyState","OPEN","send","_socketRef$current2"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useWebSocket(url) {\n  const socketRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!url) {\n      console.error(\"WebSocket URL is required.\");\n      return;\n    }\n\n    // Создаем новое подключение\n    socketRef.current = new WebSocket(url);\n\n    // Событие: подключение открыто\n    socketRef.current.onopen = () => {\n      console.log('WebSocket connection opened:', url);\n      setIsConnected(true);\n    };\n\n    // Событие: получено сообщение\n    socketRef.current.onmessage = (event) => {\n      console.log('WebSocket message received:', event.data);\n      setMessages((prevMessages) => [...prevMessages, event.data]);\n    };\n\n    // Событие: ошибка соединения\n    socketRef.current.onerror = (event) => {\n      console.error('WebSocket error:', event, `URL: ${url}`);\n      setError('WebSocket encountered an error');\n    };\n\n    // Событие: соединение закрыто\n    socketRef.current.onclose = (event) => {\n      console.warn('WebSocket closed:', event.code, event.reason);\n      setIsConnected(false);\n\n      // Можно добавить авто-переподключение здесь\n      // Например:\n      // setTimeout(() => {\n      //   connect();\n      // }, 5000);\n    };\n\n    // Очистка при размонтировании компонента\n    return () => {\n      console.log('Cleaning up WebSocket connection');\n      socketRef.current?.close();\n    };\n  }, [url]); // Пересоздание подключения только если меняется URL\n\n  // Функция отправки сообщения\n  const sendMessage = (message) => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(message);\n    } else {\n      console.error('WebSocket is not open. ReadyState:', socketRef.current?.readyState);\n    }\n  };\n\n  return { isConnected, messages, sendMessage, error };\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAO,SAASC,YAAYA,CAACC,GAAG,EAAE;EAAAC,EAAA;EAChC,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,GAAG,EAAE;MACRS,OAAO,CAACF,KAAK,CAAC,4BAA4B,CAAC;MAC3C;IACF;;IAEA;IACAL,SAAS,CAACQ,OAAO,GAAG,IAAIC,SAAS,CAACX,GAAG,CAAC;;IAEtC;IACAE,SAAS,CAACQ,OAAO,CAACE,MAAM,GAAG,MAAM;MAC/BH,OAAO,CAACI,GAAG,CAAC,8BAA8B,EAAEb,GAAG,CAAC;MAChDI,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;;IAED;IACAF,SAAS,CAACQ,OAAO,CAACI,SAAS,GAAIC,KAAK,IAAK;MACvCN,OAAO,CAACI,GAAG,CAAC,6BAA6B,EAAEE,KAAK,CAACC,IAAI,CAAC;MACtDV,WAAW,CAAEW,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,KAAK,CAACC,IAAI,CAAC,CAAC;IAC9D,CAAC;;IAED;IACAd,SAAS,CAACQ,OAAO,CAACQ,OAAO,GAAIH,KAAK,IAAK;MACrCN,OAAO,CAACF,KAAK,CAAC,kBAAkB,EAAEQ,KAAK,EAAE,QAAQf,GAAG,EAAE,CAAC;MACvDQ,QAAQ,CAAC,gCAAgC,CAAC;IAC5C,CAAC;;IAED;IACAN,SAAS,CAACQ,OAAO,CAACS,OAAO,GAAIJ,KAAK,IAAK;MACrCN,OAAO,CAACW,IAAI,CAAC,mBAAmB,EAAEL,KAAK,CAACM,IAAI,EAAEN,KAAK,CAACO,MAAM,CAAC;MAC3DlB,cAAc,CAAC,KAAK,CAAC;;MAErB;MACA;MACA;MACA;MACA;IACF,CAAC;;IAED;IACA,OAAO,MAAM;MAAA,IAAAmB,kBAAA;MACXd,OAAO,CAACI,GAAG,CAAC,kCAAkC,CAAC;MAC/C,CAAAU,kBAAA,GAAArB,SAAS,CAACQ,OAAO,cAAAa,kBAAA,uBAAjBA,kBAAA,CAAmBC,KAAK,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEX;EACA,MAAMyB,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAIxB,SAAS,CAACQ,OAAO,IAAIR,SAAS,CAACQ,OAAO,CAACiB,UAAU,KAAKhB,SAAS,CAACiB,IAAI,EAAE;MACxE1B,SAAS,CAACQ,OAAO,CAACmB,IAAI,CAACH,OAAO,CAAC;IACjC,CAAC,MAAM;MAAA,IAAAI,mBAAA;MACLrB,OAAO,CAACF,KAAK,CAAC,oCAAoC,GAAAuB,mBAAA,GAAE5B,SAAS,CAACQ,OAAO,cAAAoB,mBAAA,uBAAjBA,mBAAA,CAAmBH,UAAU,CAAC;IACpF;EACF,CAAC;EAED,OAAO;IAAExB,WAAW;IAAEE,QAAQ;IAAEoB,WAAW;IAAElB;EAAM,CAAC;AACtD;AAACN,EAAA,CA9DeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}