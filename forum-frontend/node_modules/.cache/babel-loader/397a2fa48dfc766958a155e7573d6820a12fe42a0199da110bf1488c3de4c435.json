{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  onPostCreated\n}) => {\n  _s();\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: ''\n  });\n  const [error, setError] = useState('');\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPost(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const createPost = async () => {\n    try {\n      setError('');\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You need to login first');\n        return;\n      }\n      if (!newPost.title.trim() || !newPost.content.trim()) {\n        setError('Title and content are required');\n        return;\n      }\n      const response = await axios.post('http://localhost:8081/api/v1/posts', {\n        title: newPost.title,\n        content: newPost.content\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setNewPost({\n        title: '',\n        content: ''\n      });\n      onPostCreated();\n    } catch (error) {\n      console.error('Full error:', error);\n      let errorMessage = 'Error creating post. Please try again.';\n      if (error.response) {\n        var _error$response$data, _error$response$data$, _error$response$data2;\n        if ((_error$response$data = error.response.data) !== null && _error$response$data !== void 0 && (_error$response$data$ = _error$response$data.error) !== null && _error$response$data$ !== void 0 && _error$response$data$.includes('invalid token')) {\n          errorMessage = 'Session expired. Please login again.';\n        } else if ((_error$response$data2 = error.response.data) !== null && _error$response$data2 !== void 0 && _error$response$data2.error) {\n          errorMessage = error.response.data.error;\n        }\n      } else if (error.message.includes('Network Error')) {\n        errorMessage = 'Cannot connect to server. Please check your connection.';\n      }\n      setError(errorMessage);\n    }\n  };\n  // const createPost = async () => {\n  //     try {\n  //         setError('');\n  //         const token = localStorage.getItem('token');\n\n  //         if (!token) {\n  //             setError('You need to login first');\n  //             return;\n  //         }\n\n  //         if (!newPost.title.trim() || !newPost.content.trim()) {\n  //             setError('Title and content are required');\n  //             return;\n  //         }\n\n  //         const response = await axios.post('http://localhost:8081/api/v1/posts', {\n  //             title: newPost.title,\n  //             content: newPost.content\n  //         }, {\n  //             headers: {\n  //                 'Authorization': `Bearer ${token}`,\n  //                 'Content-Type': 'application/json'\n  //             }\n  //         });\n\n  //         setNewPost({ title: '', content: '' });\n  //         onPostCreated();\n  //     } catch (error) {\n  //         console.error('Full error:', error);\n  //         const errorMessage = error.response?.data?.error || \n  //                            error.response?.data?.message || \n  //                            'Error creating post. Please try again.';\n  //         setError(errorMessage);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      value: newPost.title,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      placeholder: \"Content\",\n      value: newPost.content,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPost,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"g6ZTFtsy4mnnQxtqim3vulsrp0k=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreatePost","onPostCreated","_s","newPost","setNewPost","title","content","error","setError","handleInputChange","e","name","value","target","prev","createPost","token","localStorage","getItem","trim","response","post","headers","console","errorMessage","_error$response$data","_error$response$data$","_error$response$data2","data","includes","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\n\nconst CreatePost = ({ onPostCreated }) => {\n    const [newPost, setNewPost] = useState({ \n        title: '', \n        content: '' \n    });\n    const [error, setError] = useState('');\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewPost(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    const createPost = async () => {\n        try {\n            setError('');\n            const token = localStorage.getItem('token');\n            \n            if (!token) {\n                setError('You need to login first');\n                return;\n            }\n    \n            if (!newPost.title.trim() || !newPost.content.trim()) {\n                setError('Title and content are required');\n                return;\n            }\n    \n            const response = await axios.post('http://localhost:8081/api/v1/posts', {\n                title: newPost.title,\n                content: newPost.content\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n    \n            setNewPost({ title: '', content: '' });\n            onPostCreated();\n        } catch (error) {\n            console.error('Full error:', error);\n            let errorMessage = 'Error creating post. Please try again.';\n            \n            if (error.response) {\n                if (error.response.data?.error?.includes('invalid token')) {\n                    errorMessage = 'Session expired. Please login again.';\n                } else if (error.response.data?.error) {\n                    errorMessage = error.response.data.error;\n                }\n            } else if (error.message.includes('Network Error')) {\n                errorMessage = 'Cannot connect to server. Please check your connection.';\n            }\n            \n            setError(errorMessage);\n        }\n    };\n    // const createPost = async () => {\n    //     try {\n    //         setError('');\n    //         const token = localStorage.getItem('token');\n            \n    //         if (!token) {\n    //             setError('You need to login first');\n    //             return;\n    //         }\n\n    //         if (!newPost.title.trim() || !newPost.content.trim()) {\n    //             setError('Title and content are required');\n    //             return;\n    //         }\n\n    //         const response = await axios.post('http://localhost:8081/api/v1/posts', {\n    //             title: newPost.title,\n    //             content: newPost.content\n    //         }, {\n    //             headers: {\n    //                 'Authorization': `Bearer ${token}`,\n    //                 'Content-Type': 'application/json'\n    //             }\n    //         });\n\n    //         setNewPost({ title: '', content: '' });\n    //         onPostCreated();\n    //     } catch (error) {\n    //         console.error('Full error:', error);\n    //         const errorMessage = error.response?.data?.error || \n    //                            error.response?.data?.message || \n    //                            'Error creating post. Please try again.';\n    //         setError(errorMessage);\n    //     }\n    // };\n\n    return (\n        <div className=\"create-post-container\">\n            <h3>Create New Post</h3>\n            {error && <div className=\"error-message\">{error}</div>}\n            <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                value={newPost.title}\n                onChange={handleInputChange}\n                required\n            />\n            <textarea\n                name=\"content\"\n                placeholder=\"Content\"\n                value={newPost.content}\n                onChange={handleInputChange}\n                required\n            />\n            <button onClick={createPost}>Create Post</button>\n        </div>\n    );\n};\n\nexport default CreatePost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACnCS,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,UAAU,CAACU,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EACD,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACAP,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACRR,QAAQ,CAAC,yBAAyB,CAAC;QACnC;MACJ;MAEA,IAAI,CAACL,OAAO,CAACE,KAAK,CAACc,IAAI,CAAC,CAAC,IAAI,CAAChB,OAAO,CAACG,OAAO,CAACa,IAAI,CAAC,CAAC,EAAE;QAClDX,QAAQ,CAAC,gCAAgC,CAAC;QAC1C;MACJ;MAEA,MAAMY,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,oCAAoC,EAAE;QACpEhB,KAAK,EAAEF,OAAO,CAACE,KAAK;QACpBC,OAAO,EAAEH,OAAO,CAACG;MACrB,CAAC,EAAE;QACCgB,OAAO,EAAE;UACL,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFZ,UAAU,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MACtCL,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZgB,OAAO,CAAChB,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,IAAIiB,YAAY,GAAG,wCAAwC;MAE3D,IAAIjB,KAAK,CAACa,QAAQ,EAAE;QAAA,IAAAK,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA;QAChB,KAAAF,oBAAA,GAAIlB,KAAK,CAACa,QAAQ,CAACQ,IAAI,cAAAH,oBAAA,gBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBlB,KAAK,cAAAmB,qBAAA,eAA1BA,qBAAA,CAA4BG,QAAQ,CAAC,eAAe,CAAC,EAAE;UACvDL,YAAY,GAAG,sCAAsC;QACzD,CAAC,MAAM,KAAAG,qBAAA,GAAIpB,KAAK,CAACa,QAAQ,CAACQ,IAAI,cAAAD,qBAAA,eAAnBA,qBAAA,CAAqBpB,KAAK,EAAE;UACnCiB,YAAY,GAAGjB,KAAK,CAACa,QAAQ,CAACQ,IAAI,CAACrB,KAAK;QAC5C;MACJ,CAAC,MAAM,IAAIA,KAAK,CAACuB,OAAO,CAACD,QAAQ,CAAC,eAAe,CAAC,EAAE;QAChDL,YAAY,GAAG,yDAAyD;MAC5E;MAEAhB,QAAQ,CAACgB,YAAY,CAAC;IAC1B;EACJ,CAAC;EACD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIzB,OAAA;IAAKgC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClCjC,OAAA;MAAAiC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvB7B,KAAK,iBAAIR,OAAA;MAAKgC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEzB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtDrC,OAAA;MACIsC,IAAI,EAAC,MAAM;MACX1B,IAAI,EAAC,OAAO;MACZ2B,WAAW,EAAC,OAAO;MACnB1B,KAAK,EAAET,OAAO,CAACE,KAAM;MACrBkC,QAAQ,EAAE9B,iBAAkB;MAC5B+B,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFrC,OAAA;MACIY,IAAI,EAAC,SAAS;MACd2B,WAAW,EAAC,SAAS;MACrB1B,KAAK,EAAET,OAAO,CAACG,OAAQ;MACvBiC,QAAQ,EAAE9B,iBAAkB;MAC5B+B,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFrC,OAAA;MAAQ0C,OAAO,EAAE1B,UAAW;MAAAiB,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAAClC,EAAA,CApHIF,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AAsHhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}