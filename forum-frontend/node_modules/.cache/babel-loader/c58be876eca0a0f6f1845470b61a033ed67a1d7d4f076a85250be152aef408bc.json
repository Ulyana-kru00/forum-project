{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useCallback } from 'react';\nexport function useWebSocket(url, {\n  manual = false\n} = {}) {\n  _s();\n  const socketRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n  const getWebSocketUrl = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Authentication token not found');\n      return null;\n    }\n    try {\n      const wsUrl = new URL(url);\n      wsUrl.searchParams.set('token', token);\n      return wsUrl.toString();\n    } catch (e) {\n      console.error('Invalid WebSocket URL:', e);\n      setError('Invalid WebSocket URL');\n      return null;\n    }\n  }, [url]);\n  const handleIncomingMessage = useCallback(data => {\n    console.log('Received message data:', data);\n    if (data.type === 'AUTH_ERROR') {\n      console.error('Authentication error:', data.message);\n      setError(data.message);\n      disconnect();\n      localStorage.removeItem('token');\n      window.location.reload();\n      return;\n    }\n    setMessages(prev => [...prev, data]);\n  }, []);\n  const connect = useCallback(() => {\n    const wsUrl = getWebSocketUrl();\n    if (!wsUrl) return;\n    if (socketRef.current && [WebSocket.OPEN, WebSocket.CONNECTING].includes(socketRef.current.readyState)) {\n      console.warn('WebSocket already connecting or connected');\n      return;\n    }\n    setConnectionStatus('connecting');\n    console.log('Connecting to WebSocket...');\n    socketRef.current = new WebSocket(wsUrl);\n    socketRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setConnectionStatus('connected');\n      setError(null);\n    };\n    socketRef.current.onmessage = event => {\n      try {\n        const parsedData = JSON.parse(event.data);\n        handleIncomingMessage(parsedData);\n      } catch (e) {\n        console.warn('Non-JSON message:', event.data);\n        handleIncomingMessage({\n          content: event.data\n        });\n      }\n    };\n    socketRef.current.onerror = event => {\n      console.error('WebSocket error:', event);\n      setError('WebSocket connection error');\n      setConnectionStatus('error');\n    };\n    socketRef.current.onclose = event => {\n      console.log(`WebSocket closed: ${event.code} ${event.reason}`);\n      setIsConnected(false);\n      setConnectionStatus('disconnected');\n      if (!event.wasClean && event.code !== 1000) {\n        console.log('Reconnecting in 3 seconds...');\n        reconnectTimeoutRef.current = setTimeout(() => {\n          connect();\n        }, 3000);\n      }\n    };\n  }, [getWebSocketUrl, handleIncomingMessage]);\n  const disconnect = useCallback((permanent = false) => {\n    if (socketRef.current) {\n      if (permanent) {\n        socketRef.current.onclose = () => {};\n      }\n      socketRef.current.close(permanent ? 1000 : 1001, permanent ? 'Normal closure' : 'Reconnecting');\n    }\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n  }, []);\n  const sendMessage = useCallback(message => {\n    var _socketRef$current;\n    if (((_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.readyState) === WebSocket.OPEN) {\n      const messageWithAuth = {\n        ...message,\n        timestamp: new Date().toISOString(),\n        user_id: parseInt(localStorage.getItem('userId'), 10),\n        username: localStorage.getItem('username') || 'unknown'\n      };\n      try {\n        socketRef.current.send(JSON.stringify(messageWithAuth));\n      } catch (e) {\n        console.error('Error sending message:', e);\n        setError('Failed to send message');\n      }\n    } else {\n      console.error('Cannot send message - WebSocket not open');\n      setError('Connection not ready');\n    }\n  }, []);\n  useEffect(() => {\n    if (!manual) {\n      connect();\n    }\n    return () => {\n      disconnect(true);\n    };\n  }, [connect, disconnect, manual]);\n  return {\n    isConnected,\n    connectionStatus,\n    messages,\n    sendMessage,\n    connect,\n    disconnect,\n    error\n  };\n}\n_s(useWebSocket, \"vPPQoK0jlNnRWGamV6kh/z2+XwI=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useWebSocket","url","manual","_s","socketRef","reconnectTimeoutRef","isConnected","setIsConnected","connectionStatus","setConnectionStatus","messages","setMessages","error","setError","getWebSocketUrl","token","localStorage","getItem","wsUrl","URL","searchParams","set","toString","e","console","handleIncomingMessage","data","log","type","message","disconnect","removeItem","window","location","reload","prev","connect","current","WebSocket","OPEN","CONNECTING","includes","readyState","warn","onopen","onmessage","event","parsedData","JSON","parse","content","onerror","onclose","code","reason","wasClean","setTimeout","permanent","close","clearTimeout","sendMessage","_socketRef$current","messageWithAuth","timestamp","Date","toISOString","user_id","parseInt","username","send","stringify"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\n\nexport function useWebSocket(url, { manual = false } = {}) {\n  const socketRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(null);\n\n  const getWebSocketUrl = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Authentication token not found');\n      return null;\n    }\n\n    try {\n      const wsUrl = new URL(url);\n      wsUrl.searchParams.set('token', token);\n      return wsUrl.toString();\n    } catch (e) {\n      console.error('Invalid WebSocket URL:', e);\n      setError('Invalid WebSocket URL');\n      return null;\n    }\n  }, [url]);\n\n  const handleIncomingMessage = useCallback((data) => {\n    console.log('Received message data:', data);\n    if (data.type === 'AUTH_ERROR') {\n      console.error('Authentication error:', data.message);\n      setError(data.message);\n      disconnect();\n      localStorage.removeItem('token');\n      window.location.reload();\n      return;\n    }\n    setMessages(prev => [...prev, data]);\n  }, []);\n\n  const connect = useCallback(() => {\n    const wsUrl = getWebSocketUrl();\n    if (!wsUrl) return;\n\n    if (socketRef.current && \n      [WebSocket.OPEN, WebSocket.CONNECTING].includes(socketRef.current.readyState)) {\n      console.warn('WebSocket already connecting or connected');\n      return;\n    }\n\n    setConnectionStatus('connecting');\n    console.log('Connecting to WebSocket...');\n\n    socketRef.current = new WebSocket(wsUrl);\n\n    socketRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      setConnectionStatus('connected');\n      setError(null);\n    };\n\n    socketRef.current.onmessage = (event) => {\n      try {\n        const parsedData = JSON.parse(event.data);\n        handleIncomingMessage(parsedData);\n      } catch (e) {\n        console.warn('Non-JSON message:', event.data);\n        handleIncomingMessage({ content: event.data });\n      }\n    };\n\n    socketRef.current.onerror = (event) => {\n      console.error('WebSocket error:', event);\n      setError('WebSocket connection error');\n      setConnectionStatus('error');\n    };\n\n    socketRef.current.onclose = (event) => {\n      console.log(`WebSocket closed: ${event.code} ${event.reason}`);\n      setIsConnected(false);\n      setConnectionStatus('disconnected');\n\n      if (!event.wasClean && event.code !== 1000) {\n        console.log('Reconnecting in 3 seconds...');\n        reconnectTimeoutRef.current = setTimeout(() => {\n          connect();\n        }, 3000);\n      }\n    };\n  }, [getWebSocketUrl, handleIncomingMessage]);\n\n  const disconnect = useCallback((permanent = false) => {\n    if (socketRef.current) {\n      if (permanent) {\n        socketRef.current.onclose = () => {};\n      }\n      socketRef.current.close(\n        permanent ? 1000 : 1001,\n        permanent ? 'Normal closure' : 'Reconnecting'\n      );\n    }\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n  }, []);\n\n  const sendMessage = useCallback((message) => {\n    if (socketRef.current?.readyState === WebSocket.OPEN) {\n      const messageWithAuth = {\n        ...message,\n        timestamp: new Date().toISOString(),\n        user_id: parseInt(localStorage.getItem('userId'), 10),\n        username: localStorage.getItem('username') || 'unknown',\n      };\n\n      try {\n        socketRef.current.send(JSON.stringify(messageWithAuth));\n      } catch (e) {\n        console.error('Error sending message:', e);\n        setError('Failed to send message');\n      }\n    } else {\n      console.error('Cannot send message - WebSocket not open');\n      setError('Connection not ready');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!manual) {\n      connect();\n    }\n\n    return () => {\n      disconnect(true);\n    };\n  }, [connect, disconnect, manual]);\n\n  return {\n    isConnected,\n    connectionStatus,\n    messages,\n    sendMessage,\n    connect,\n    disconnect,\n    error,\n  };\n}\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}