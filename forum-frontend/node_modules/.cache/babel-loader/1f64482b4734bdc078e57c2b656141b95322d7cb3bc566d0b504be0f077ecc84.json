{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('token');\n  const currentUser = JSON.parse(localStorage.getItem('user')) || {};\n  const fetchComments = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.get(`http://localhost:8081/api/v1/posts/${postId}/comments`, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const processedComments = (response.data.data || response.data).map(comment => ({\n        ...comment,\n        id: parseInt(comment.id, 10),\n        author_id: parseInt(comment.author_id, 10),\n        post_id: parseInt(comment.post_id, 10)\n      }));\n      setComments(processedComments);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [postId, token]);\n  const handleSubmitComment = useCallback(async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    try {\n      const response = await axios.post(`http://localhost:8081/api/v1/posts/${postId}/comments`, {\n        content: newComment,\n        author_id: currentUser.id\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setComments(prev => [{\n        ...response.data,\n        author_name: currentUser.username || `User #${currentUser.id}`\n      }, ...prev]);\n      setNewComment('');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message);\n    }\n  }, [newComment, postId, token, currentUser]);\n  useEffect(() => {\n    fetchComments();\n  }, [fetchComments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Comments (\", comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write a comment...\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-comment-btn\",\n        disabled: loading,\n        children: loading ? 'Posting...' : 'Post Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-author\",\n            children: comment.author_name || `User #${comment.author_id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-timestamp\",\n            children: new Date(comment.created_at).toLocaleDateString('en-US', {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-content\",\n          children: comment.content.split('\\n').map((p, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [p, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 50\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"K6+l0UqPy5BTb2NeG1yU2caCk5k=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Comments","postId","_s","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","token","localStorage","getItem","currentUser","JSON","parse","fetchComments","response","get","headers","processedComments","data","map","comment","id","parseInt","author_id","post_id","err","_err$response","_err$response$data","message","handleSubmitComment","e","preventDefault","trim","post","content","prev","author_name","username","_err$response2","_err$response2$data","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","type","disabled","Date","created_at","toLocaleDateString","hour","minute","split","p","i","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/Comment.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\nconst Comments = ({ postId }) => {\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    const token = localStorage.getItem('token');\n    const currentUser = JSON.parse(localStorage.getItem('user')) || {};\n\n    const fetchComments = useCallback(async () => {\n        try {\n            setLoading(true);\n            setError(null);\n\n            const response = await axios.get(\n                `http://localhost:8081/api/v1/posts/${postId}/comments`,\n                {\n                    headers: { \n                        'Accept': 'application/json',\n                        'Authorization': `Bearer ${token}`\n                    }\n                }\n            );\n\n            const processedComments = (response.data.data || response.data).map(comment => ({\n                ...comment,\n                id: parseInt(comment.id, 10),\n                author_id: parseInt(comment.author_id, 10),\n                post_id: parseInt(comment.post_id, 10)\n            }));\n\n            setComments(processedComments);\n        } catch (err) {\n            setError(err.response?.data?.error || err.message);\n        } finally {\n            setLoading(false);\n        }\n    }, [postId, token]);\n\n    const handleSubmitComment = useCallback(async (e) => {\n        e.preventDefault();\n        if (!newComment.trim()) return;\n\n        try {\n            const response = await axios.post(\n                `http://localhost:8081/api/v1/posts/${postId}/comments`,\n                {\n                    content: newComment,\n                    author_id: currentUser.id\n                },\n                {\n                    headers: { \n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n\n            setComments(prev => [\n                {\n                    ...response.data,\n                    author_name: currentUser.username || `User #${currentUser.id}`\n                },\n                ...prev\n            ]);\n            \n            setNewComment('');\n        } catch (err) {\n            setError(err.response?.data?.error || err.message);\n        }\n    }, [newComment, postId, token, currentUser]);\n\n    useEffect(() => {\n        fetchComments();\n    }, [fetchComments]);\n\n    return (\n        <div className=\"comments-section\">\n            <h4>Comments ({comments.length})</h4>\n            \n            <form onSubmit={handleSubmitComment} className=\"comment-form\">\n                <textarea\n                    value={newComment}\n                    onChange={(e) => setNewComment(e.target.value)}\n                    placeholder=\"Write a comment...\"\n                    rows=\"3\"\n                />\n                <button \n                    type=\"submit\" \n                    className=\"submit-comment-btn\"\n                    disabled={loading}\n                >\n                    {loading ? 'Posting...' : 'Post Comment'}\n                </button>\n            </form>\n\n            {loading && <div className=\"loading-indicator\">Loading comments...</div>}\n            {error && <div className=\"error-message\">Error: {error}</div>}\n\n            <div className=\"comments-list\">\n                {comments.map(comment => (\n                    <div key={comment.id} className=\"comment-item\">\n                        <div className=\"comment-header\">\n                            <span className=\"comment-author\">\n                                {comment.author_name || `User #${comment.author_id}`}\n                            </span>\n                            <span className=\"comment-timestamp\">\n                                {new Date(comment.created_at).toLocaleDateString('en-US', {\n                                    hour: '2-digit',\n                                    minute: '2-digit'\n                                })}\n                            </span>\n                        </div>\n                        <p className=\"comment-content\">\n                            {comment.content.split('\\n').map((p, i) => (\n                                <span key={i}>{p}<br/></span>\n                            ))}\n                        </p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Comments;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sFAAsF;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;EAElE,MAAMI,aAAa,GAAGrB,WAAW,CAAC,YAAY;IAC1C,IAAI;MACAY,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMQ,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAC5B,sCAAsClB,MAAM,WAAW,EACvD;QACImB,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,eAAe,EAAE,UAAUT,KAAK;QACpC;MACJ,CACJ,CAAC;MAED,MAAMU,iBAAiB,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACA,IAAI,IAAIJ,QAAQ,CAACI,IAAI,EAAEC,GAAG,CAACC,OAAO,KAAK;QAC5E,GAAGA,OAAO;QACVC,EAAE,EAAEC,QAAQ,CAACF,OAAO,CAACC,EAAE,EAAE,EAAE,CAAC;QAC5BE,SAAS,EAAED,QAAQ,CAACF,OAAO,CAACG,SAAS,EAAE,EAAE,CAAC;QAC1CC,OAAO,EAAEF,QAAQ,CAACF,OAAO,CAACI,OAAO,EAAE,EAAE;MACzC,CAAC,CAAC,CAAC;MAEHxB,WAAW,CAACiB,iBAAiB,CAAC;IAClC,CAAC,CAAC,OAAOQ,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACVrB,QAAQ,CAAC,EAAAoB,aAAA,GAAAD,GAAG,CAACX,QAAQ,cAAAY,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcR,IAAI,cAAAS,kBAAA,uBAAlBA,kBAAA,CAAoBtB,KAAK,KAAIoB,GAAG,CAACG,OAAO,CAAC;IACtD,CAAC,SAAS;MACNxB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACP,MAAM,EAAEU,KAAK,CAAC,CAAC;EAEnB,MAAMsB,mBAAmB,GAAGrC,WAAW,CAAC,MAAOsC,CAAC,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC9B,UAAU,CAAC+B,IAAI,CAAC,CAAC,EAAE;IAExB,IAAI;MACA,MAAMlB,QAAQ,GAAG,MAAMrB,KAAK,CAACwC,IAAI,CAC7B,sCAAsCpC,MAAM,WAAW,EACvD;QACIqC,OAAO,EAAEjC,UAAU;QACnBsB,SAAS,EAAEb,WAAW,CAACW;MAC3B,CAAC,EACD;QACIL,OAAO,EAAE;UACL,eAAe,EAAE,UAAUT,KAAK,EAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MAEDP,WAAW,CAACmC,IAAI,IAAI,CAChB;QACI,GAAGrB,QAAQ,CAACI,IAAI;QAChBkB,WAAW,EAAE1B,WAAW,CAAC2B,QAAQ,IAAI,SAAS3B,WAAW,CAACW,EAAE;MAChE,CAAC,EACD,GAAGc,IAAI,CACV,CAAC;MAEFjC,aAAa,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOuB,GAAG,EAAE;MAAA,IAAAa,cAAA,EAAAC,mBAAA;MACVjC,QAAQ,CAAC,EAAAgC,cAAA,GAAAb,GAAG,CAACX,QAAQ,cAAAwB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcpB,IAAI,cAAAqB,mBAAA,uBAAlBA,mBAAA,CAAoBlC,KAAK,KAAIoB,GAAG,CAACG,OAAO,CAAC;IACtD;EACJ,CAAC,EAAE,CAAC3B,UAAU,EAAEJ,MAAM,EAAEU,KAAK,EAAEG,WAAW,CAAC,CAAC;EAE5CnB,SAAS,CAAC,MAAM;IACZsB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACIlB,OAAA;IAAK6C,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7B9C,OAAA;MAAA8C,QAAA,GAAI,YAAU,EAAC1C,QAAQ,CAAC2C,MAAM,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErCnD,OAAA;MAAMoD,QAAQ,EAAElB,mBAAoB;MAACW,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzD9C,OAAA;QACIqD,KAAK,EAAE/C,UAAW;QAClBgD,QAAQ,EAAGnB,CAAC,IAAK5B,aAAa,CAAC4B,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC/CG,WAAW,EAAC,oBAAoB;QAChCC,IAAI,EAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFnD,OAAA;QACI0D,IAAI,EAAC,QAAQ;QACbb,SAAS,EAAC,oBAAoB;QAC9Bc,QAAQ,EAAEnD,OAAQ;QAAAsC,QAAA,EAEjBtC,OAAO,GAAG,YAAY,GAAG;MAAc;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EAEN3C,OAAO,iBAAIR,OAAA;MAAK6C,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvEzC,KAAK,iBAAIV,OAAA;MAAK6C,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,SAAO,EAACpC,KAAK;IAAA;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE7DnD,OAAA;MAAK6C,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzB1C,QAAQ,CAACoB,GAAG,CAACC,OAAO,iBACjBzB,OAAA;QAAsB6C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC1C9C,OAAA;UAAK6C,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B9C,OAAA;YAAM6C,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC3BrB,OAAO,CAACgB,WAAW,IAAI,SAAShB,OAAO,CAACG,SAAS;UAAE;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACPnD,OAAA;YAAM6C,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC9B,IAAIc,IAAI,CAACnC,OAAO,CAACoC,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;cACtDC,IAAI,EAAE,SAAS;cACfC,MAAM,EAAE;YACZ,CAAC;UAAC;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNnD,OAAA;UAAG6C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EACzBrB,OAAO,CAACc,OAAO,CAAC0B,KAAK,CAAC,IAAI,CAAC,CAACzC,GAAG,CAAC,CAAC0C,CAAC,EAAEC,CAAC,kBAClCnE,OAAA;YAAA8C,QAAA,GAAeoB,CAAC,eAAClE,OAAA;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAAXgB,CAAC;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAhBE1B,OAAO,CAACC,EAAE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBf,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChD,EAAA,CA3HIF,QAAQ;AAAAmE,EAAA,GAARnE,QAAQ;AA6Hd,eAAeA,QAAQ;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}