{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport axios from 'axios';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    sendMessage,\n    lastMessage\n  } = useWebSocket('ws://localhost:8082/ws');\n  const usernames = localStorage.getItem(\"username\");\n  const messagesEndRef = useRef(null);\n  const isAuthenticated = !!localStorage.getItem('token');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:8082/messages');\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, []);\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessages(prevMessages => {\n        if (Array.isArray(prevMessages)) {\n          return [...prevMessages, JSON.parse(lastMessage.data)];\n        } else {\n          return [JSON.parse(lastMessage.data)];\n        }\n      });\n    }\n  }, [lastMessage]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (!isAuthenticated) {\n      alert('Please login to send messages');\n      return;\n    }\n    const msg = {\n      username: usernames,\n      message\n    };\n    sendMessage(JSON.stringify(msg));\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status connected\",\n      children: \"\\u0427\\u0430\\u0442\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages && messages.length > 0 ? messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user\",\n          children: [msg.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message system\",\n        children: \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !message.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-prompt\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), \" to send messages\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"pdyUq2V/82IrnexKM90Q8FUl0Co=\", false, function () {\n  return [useWebSocket];\n});\n_c = Chat;\nexport default Chat;\n// src/Chat.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import useWebSocket from 'react-use-websocket';\n// import axios from 'axios';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   const { sendMessage, lastMessage } = useWebSocket('ws://localhost:8082/ws');\n//   const usernames = localStorage.getItem(\"username\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     // Загрузка сообщений из базы данных при инициализации\n//     const fetchMessages = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8082/messages');\n//         setMessages(response.data);\n//       } catch (error) {\n//         console.error('Error fetching messages:', error);\n//       }\n//     };\n\n//     fetchMessages();\n//   }, []);\n\n//   useEffect(() => {\n//     if (lastMessage !== null) {\n//       setMessages((prevMessages) => {\n//         if (Array.isArray(prevMessages)) {\n//           return [...prevMessages, JSON.parse(lastMessage.data)];\n//         } else {\n//           return [JSON.parse(lastMessage.data)];\n//         }\n//       });\n//     }\n//   }, [lastMessage]);\n\n//   useEffect(() => {\n//     // Прокрутка вниз при добавлении нового сообщения\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = () => {\n//     const msg = { username: usernames, message };\n//     sendMessage(JSON.stringify(msg));\n//     setMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"connection-status connected\">\n//         Чатик\n//       </div>\n//       <div className=\"messages\">\n//         {messages && messages.length > 0 ? (\n//           messages.map((msg, index) => (\n//             <div key={index} className=\"message\">\n//               <span className=\"user\">{msg.username}:</span>\n//               <span>{msg.message}</span>\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"message system\">No messages yet.</div>\n//         )}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"message-form\">\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//         />\n//         <button onClick={handleSendMessage} disabled={!message.trim()}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebSocket","axios","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","sendMessage","lastMessage","usernames","localStorage","getItem","messagesEndRef","isAuthenticated","fetchMessages","response","get","data","error","console","prevMessages","Array","isArray","JSON","parse","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","alert","msg","username","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","ref","type","value","onChange","e","target","onKeyPress","key","onClick","disabled","trim","href","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport axios from 'axios';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\nconst Chat = () => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const { sendMessage, lastMessage } = useWebSocket('ws://localhost:8082/ws');\n  const usernames = localStorage.getItem(\"username\");\n  const messagesEndRef = useRef(null);\n  const isAuthenticated = !!localStorage.getItem('token');\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:8082/messages');\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n\n    fetchMessages();\n  }, []);\n\n  useEffect(() => {\n    if (lastMessage !== null) {\n      setMessages((prevMessages) => {\n        if (Array.isArray(prevMessages)) {\n          return [...prevMessages, JSON.parse(lastMessage.data)];\n        } else {\n          return [JSON.parse(lastMessage.data)];\n        }\n      });\n    }\n  }, [lastMessage]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    if (!isAuthenticated) {\n      alert('Please login to send messages');\n      return;\n    }\n    const msg = { username: usernames, message };\n    sendMessage(JSON.stringify(msg));\n    setMessage('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"connection-status connected\">\n        Чатик\n      </div>\n      <div className=\"messages\">\n        {messages && messages.length > 0 ? (\n          messages.map((msg, index) => (\n            <div key={index} className=\"message\">\n              <span className=\"user\">{msg.username}:</span>\n              <span>{msg.message}</span>\n            </div>\n          ))\n        ) : (\n          <div className=\"message system\">No messages yet.</div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      {isAuthenticated ? (\n        <div className=\"message-form\">\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n          />\n          <button onClick={handleSendMessage} disabled={!message.trim()}>Send</button>\n        </div>\n      ) : (\n        <div className=\"login-prompt\">\n          <p>Please <a href=\"/login\">login</a> to send messages</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n // src/Chat.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import useWebSocket from 'react-use-websocket';\n// import axios from 'axios';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   const { sendMessage, lastMessage } = useWebSocket('ws://localhost:8082/ws');\n//   const usernames = localStorage.getItem(\"username\");\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     // Загрузка сообщений из базы данных при инициализации\n//     const fetchMessages = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8082/messages');\n//         setMessages(response.data);\n//       } catch (error) {\n//         console.error('Error fetching messages:', error);\n//       }\n//     };\n\n//     fetchMessages();\n//   }, []);\n\n//   useEffect(() => {\n//     if (lastMessage !== null) {\n//       setMessages((prevMessages) => {\n//         if (Array.isArray(prevMessages)) {\n//           return [...prevMessages, JSON.parse(lastMessage.data)];\n//         } else {\n//           return [JSON.parse(lastMessage.data)];\n//         }\n//       });\n//     }\n//   }, [lastMessage]);\n\n//   useEffect(() => {\n//     // Прокрутка вниз при добавлении нового сообщения\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   }, [messages]);\n\n//   const handleSendMessage = () => {\n//     const msg = { username: usernames, message };\n//     sendMessage(JSON.stringify(msg));\n//     setMessage('');\n//   };\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"connection-status connected\">\n//         Чатик\n//       </div>\n//       <div className=\"messages\">\n//         {messages && messages.length > 0 ? (\n//           messages.map((msg, index) => (\n//             <div key={index} className=\"message\">\n//               <span className=\"user\">{msg.username}:</span>\n//               <span>{msg.message}</span>\n//             </div>\n//           ))\n//         ) : (\n//           <div className=\"message system\">No messages yet.</div>\n//         )}\n//         <div ref={messagesEndRef} />\n//       </div>\n//       <div className=\"message-form\">\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//         />\n//         <button onClick={handleSendMessage} disabled={!message.trim()}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}