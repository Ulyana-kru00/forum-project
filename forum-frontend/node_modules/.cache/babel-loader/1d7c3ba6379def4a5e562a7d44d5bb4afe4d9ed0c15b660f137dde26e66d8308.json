{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/ProfilePage/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport PostList from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js';\nimport CreatePostForm from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/CreatePost.js';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [userPosts, setUserPosts] = useState([]);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const currentUserId = parseInt(localStorage.getItem('userId'), 10);\n  const token = localStorage.getItem('token');\n  const fetchUserPosts = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8081/api/v1/posts/user/${currentUserId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      });\n      const processedPosts = response.data.data.map(post => ({\n        ...post,\n        id: parseInt(post.id, 10),\n        author_id: parseInt(post.author_id, 10),\n        created_at: new Date(post.created_at).toISOString()\n      }));\n      setUserPosts(processedPosts);\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n    }\n  }, [currentUserId, token]);\n  useEffect(() => {\n    fetchUserPosts();\n  }, [fetchUserPosts, forceRefresh]);\n  const handleNewPost = async newPost => {\n    setUserPosts(prev => [newPost, ...prev]);\n    setForceRefresh(prev => prev + 1);\n    setShowCreateForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateForm(!showCreateForm),\n        className: \"create-post-button\",\n        children: showCreateForm ? 'Cancel' : '+ New Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(CreatePostForm, {\n      onSuccess: handleNewPost,\n      onCancel: () => setShowCreateForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-posts-list\",\n      children: userPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-posts-message\",\n        children: showCreateForm ? \"Write your first post!\" : \"You haven't created any posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n        posts: userPosts,\n        onDelete: postId => {\n          setUserPosts(prev => prev.filter(p => p.id !== postId));\n          setForceRefresh(prev => prev + 1);\n        },\n        isProfilePage: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfilePage, \"lFOQfs9GBbASuW1UloY4nEe+k8c=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","PostList","CreatePostForm","jsxDEV","_jsxDEV","ProfilePage","_s","userPosts","setUserPosts","showCreateForm","setShowCreateForm","forceRefresh","setForceRefresh","currentUserId","parseInt","localStorage","getItem","token","fetchUserPosts","response","get","headers","processedPosts","data","map","post","id","author_id","created_at","Date","toISOString","error","console","handleNewPost","newPost","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSuccess","onCancel","length","posts","onDelete","postId","filter","p","isProfilePage","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/ProfilePage/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport PostList from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js';\nimport CreatePostForm from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/CreatePost.js';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\nconst ProfilePage = () => {\n    const [userPosts, setUserPosts] = useState([]);\n    const [showCreateForm, setShowCreateForm] = useState(false);\n    const [forceRefresh, setForceRefresh] = useState(0);\n    const currentUserId = parseInt(localStorage.getItem('userId'), 10);\n    const token = localStorage.getItem('token');\n\n    const fetchUserPosts = useCallback(async () => {\n        try {\n            const response = await axios.get(\n                `http://localhost:8081/api/v1/posts/user/${currentUserId}`,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            \n            const processedPosts = response.data.data.map(post => ({\n                ...post,\n                id: parseInt(post.id, 10),\n                author_id: parseInt(post.author_id, 10),\n                created_at: new Date(post.created_at).toISOString()\n            }));\n            \n            setUserPosts(processedPosts);\n        } catch (error) {\n            console.error('Error fetching user posts:', error);\n        }\n    }, [currentUserId, token]);\n\n    useEffect(() => {\n        fetchUserPosts();\n    }, [fetchUserPosts, forceRefresh]);\n\n    const handleNewPost = async (newPost) => {\n        setUserPosts(prev => [newPost, ...prev]);\n        setForceRefresh(prev => prev + 1);\n        setShowCreateForm(false);\n    };\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"profile-header\">\n                <h2>My Posts</h2>\n                <button \n                    onClick={() => setShowCreateForm(!showCreateForm)}\n                    className=\"create-post-button\"\n                >\n                    {showCreateForm ? 'Cancel' : '+ New Post'}\n                </button>\n            </div>\n\n            {showCreateForm && (\n                <CreatePostForm \n                    onSuccess={handleNewPost}\n                    onCancel={() => setShowCreateForm(false)}\n                />\n            )}\n\n            <div className=\"user-posts-list\">\n                {userPosts.length === 0 ? (\n                    <div className=\"no-posts-message\">\n                        {showCreateForm \n                            ? \"Write your first post!\" \n                            : \"You haven't created any posts yet.\"}\n                    </div>\n                ) : (\n                    <PostList \n                        posts={userPosts}\n                        onDelete={(postId) => {\n                            setUserPosts(prev => prev.filter(p => p.id !== postId));\n                            setForceRefresh(prev => prev + 1);\n                        }}\n                        isProfilePage={true}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}