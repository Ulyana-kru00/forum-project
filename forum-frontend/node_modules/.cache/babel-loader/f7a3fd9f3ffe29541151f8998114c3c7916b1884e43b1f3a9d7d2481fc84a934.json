{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js'; // путь поменяй если другой\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css'; // путь к стилям\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const token = localStorage.getItem('token');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const ws = useRef(null);\n  useEffect(() => {\n    if (!token) return;\n    ws.current = new WebSocket(`ws://localhost:3000/chat?token=${token}`);\n    ws.current.onopen = () => {\n      console.log('WebSocket подключен');\n    };\n    ws.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        setMessages(prev => [...prev, data]);\n      } catch (e) {\n        console.error('Ошибка при разборе сообщения:', e);\n      }\n    };\n    ws.current.onclose = () => {\n      console.log('WebSocket отключен');\n    };\n    ws.current.onerror = error => {\n      console.error('WebSocket ошибка:', error);\n    };\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [token]);\n  const sendMessage = () => {\n    if (ws.current && message.trim()) {\n      ws.current.send(JSON.stringify({\n        text: message\n      }));\n      setMessage('');\n    }\n  };\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F \\u0437\\u0430\\u043F\\u0440\\u0435\\u0449\\u0435\\u043D. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0427\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username || 'Аноним', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        style: {\n          padding: '0.5rem',\n          width: '60%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: '0.5rem',\n          marginLeft: '1rem'\n        },\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"SqbOMvUV23lo9pBSVMXFoonjm8A=\");\n_c = Chat;\nexport default Chat;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import useWebSocket from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js'; // путь поменяй если другой\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css'; // путь к стилям\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   const [userId, setUserId] = useState(null);\n//   const [username, setUsername] = useState(null);\n\n//   const {\n//     messages,\n//     sendMessage,\n//     connectionStatus,\n//     connect, // добавляем ручное подключение\n//     disconnect\n//   } = useWebSocket('ws://localhost:8082/ws', { manual: true }); // manual mode!\n\n//   useEffect(() => {\n//     const storedUserId = localStorage.getItem('userId');\n//     const storedUsername = localStorage.getItem('username');\n//     if (storedUserId && storedUsername) {\n//       setUserId(storedUserId);\n//       setUsername(storedUsername);\n//       setIsLoggedIn(true);\n//       connect(); // подключаем WebSocket только если есть данные\n//     }\n//   }, [connect]);\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:8080/login', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const { userId, username, token } = response.data;\n\n//         if (!userId || !username || username === 'undefined') {\n//           console.warn('Invalid user session, cannot connect');\n//           setErrorMessage('Login failed: server did not provide user info.');\n//           return;\n//         }\n\n//         localStorage.setItem('userId', userId);\n//         localStorage.setItem('username', username);\n//         localStorage.setItem('token', token);\n\n//         setUserId(userId);\n//         setUsername(username);\n//         setIsLoggedIn(true);\n\n//         connect(); // подключаем WebSocket после логина\n\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setErrorMessage('Login failed. Please check your credentials.');\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!message.trim() || !username) {\n//       console.warn('Cannot send empty message or missing username');\n//       return;\n//     }\n\n//     sendMessage({\n//       user_id:  userId,\n//       username: username,\n//       content: message.trim(),\n//     });\n\n//     setMessage('');\n//   };\n\n//   if (!isLoggedIn) {\n//     return (\n//       <div>\n//         <h2>Login to use Chat</h2>\n//         <form onSubmit={handleLogin}>\n//           <div>\n//             <label>Email</label>\n//             <input\n//               type=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <div>\n//             <label>Password</label>\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\">Login</button>\n//         </form>\n\n//         {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"connection-status\">\n//         Status: {connectionStatus}\n//       </div>\n\n//       <div className=\"messages\">\n//         {messages.map((msg, index) => (\n//           <div key={index} className=\"message\">\n//             <span className=\"user\">{msg.username}:</span>  \n//             <span className=\"content\">{msg.content}</span>\n//           </div>\n//         ))}\n//       </div>\n\n//       <form onSubmit={handleSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//           placeholder=\"Type your message...\"\n//           disabled={connectionStatus !== 'connected'}\n//           className=\"chat-input\"\n//         />\n//         <button\n//           type=\"submit\"\n//           disabled={connectionStatus !== 'connected' || !message.trim()}\n//           className=\"chat-send-button\"\n//         >\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebSocket","jsxDEV","_jsxDEV","Chat","_s","token","localStorage","getItem","messages","setMessages","message","setMessage","ws","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","prev","e","error","onclose","onerror","close","sendMessage","trim","send","stringify","text","style","padding","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","map","msg","index","username","type","value","onChange","target","placeholder","width","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js'; // путь поменяй если другой\n import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css'; // путь к стилям\n const Chat = () => {\n  const token = localStorage.getItem('token');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const ws = useRef(null);\n\n  useEffect(() => {\n    if (!token) return;\n\n    ws.current = new WebSocket(`ws://localhost:3000/chat?token=${token}`);\n\n    ws.current.onopen = () => {\n      console.log('WebSocket подключен');\n    };\n\n    ws.current.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        setMessages((prev) => [...prev, data]);\n      } catch (e) {\n        console.error('Ошибка при разборе сообщения:', e);\n      }\n    };\n\n    ws.current.onclose = () => {\n      console.log('WebSocket отключен');\n    };\n\n    ws.current.onerror = (error) => {\n      console.error('WebSocket ошибка:', error);\n    };\n\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [token]);\n\n  const sendMessage = () => {\n    if (ws.current && message.trim()) {\n      ws.current.send(JSON.stringify({ text: message }));\n      setMessage('');\n    }\n  };\n\n  if (!token) {\n    return (\n      <div style={{ padding: '2rem', color: 'red', textAlign: 'center' }}>\n        Доступ запрещен. Пожалуйста, войдите в систему.\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Чат</h2>\n      <div style={{ marginBottom: '1rem' }}>\n        {messages.map((msg, index) => (\n          <div key={index} style={{ marginBottom: '0.5rem' }}>\n            <strong>{msg.username || 'Аноним'}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Введите сообщение\"\n          style={{ padding: '0.5rem', width: '60%' }}\n        />\n        <button onClick={sendMessage} style={{ padding: '0.5rem', marginLeft: '1rem' }}>\n          Отправить\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import useWebSocket from '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js'; // путь поменяй если другой\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css'; // путь к стилям\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n//   const [userId, setUserId] = useState(null);\n//   const [username, setUsername] = useState(null);\n\n//   const {\n//     messages,\n//     sendMessage,\n//     connectionStatus,\n//     connect, // добавляем ручное подключение\n//     disconnect\n//   } = useWebSocket('ws://localhost:8082/ws', { manual: true }); // manual mode!\n\n//   useEffect(() => {\n//     const storedUserId = localStorage.getItem('userId');\n//     const storedUsername = localStorage.getItem('username');\n//     if (storedUserId && storedUsername) {\n//       setUserId(storedUserId);\n//       setUsername(storedUsername);\n//       setIsLoggedIn(true);\n//       connect(); // подключаем WebSocket только если есть данные\n//     }\n//   }, [connect]);\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://localhost:8080/login', {\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 200) {\n//         const { userId, username, token } = response.data;\n\n//         if (!userId || !username || username === 'undefined') {\n//           console.warn('Invalid user session, cannot connect');\n//           setErrorMessage('Login failed: server did not provide user info.');\n//           return;\n//         }\n\n//         localStorage.setItem('userId', userId);\n//         localStorage.setItem('username', username);\n//         localStorage.setItem('token', token);\n\n//         setUserId(userId);\n//         setUsername(username);\n//         setIsLoggedIn(true);\n\n//         connect(); // подключаем WebSocket после логина\n\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setErrorMessage('Login failed. Please check your credentials.');\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!message.trim() || !username) {\n//       console.warn('Cannot send empty message or missing username');\n//       return;\n//     }\n\n//     sendMessage({\n//       user_id:  userId,\n//       username: username,\n//       content: message.trim(),\n//     });\n\n//     setMessage('');\n//   };\n\n//   if (!isLoggedIn) {\n//     return (\n//       <div>\n//         <h2>Login to use Chat</h2>\n//         <form onSubmit={handleLogin}>\n//           <div>\n//             <label>Email</label>\n//             <input\n//               type=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <div>\n//             <label>Password</label>\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <button type=\"submit\">Login</button>\n//         </form>\n\n//         {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"chat-container\">\n//       <div className=\"connection-status\">\n//         Status: {connectionStatus}\n//       </div>\n\n//       <div className=\"messages\">\n//         {messages.map((msg, index) => (\n//           <div key={index} className=\"message\">\n//             <span className=\"user\">{msg.username}:</span>  \n//             <span className=\"content\">{msg.content}</span>\n//           </div>\n//         ))}\n//       </div>\n\n//       <form onSubmit={handleSubmit} className=\"chat-form\">\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//           placeholder=\"Type your message...\"\n//           disabled={connectionStatus !== 'connected'}\n//           className=\"chat-input\"\n//         />\n//         <button\n//           type=\"submit\"\n//           disabled={connectionStatus !== 'connected' || !message.trim()}\n//           className=\"chat-send-button\"\n//         >\n//           Send\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}