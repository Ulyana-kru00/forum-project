{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useCallback } from 'react';\nexport default function useWebSocket(url, options = {\n  manual: false\n}) {\n  _s();\n  const socketRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const connect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n    socketRef.current = new WebSocket(url);\n    socketRef.current.onopen = () => {\n      setConnectionStatus('connected');\n    };\n    socketRef.current.onclose = () => {\n      setConnectionStatus('disconnected');\n    };\n    socketRef.current.onerror = () => {\n      setConnectionStatus('error');\n    };\n    socketRef.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        setMessages(prev => [...prev, data]);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message', error);\n      }\n    };\n  }, [url]);\n  const disconnect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n      socketRef.current = null;\n    }\n  }, []);\n  const sendMessage = useCallback(msg => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify(msg));\n    } else {\n      console.warn('WebSocket not connected');\n    }\n  }, []);\n  useEffect(() => {\n    if (!options.manual) {\n      connect();\n    }\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect, options.manual]);\n  return {\n    messages,\n    sendMessage,\n    connectionStatus,\n    connect,\n    disconnect\n  };\n}\n_s(useWebSocket, \"UPT3Az0FQt82/m8TkC4vxNx6iLU=\");","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useWebSocket","url","options","manual","_s","socketRef","messages","setMessages","connectionStatus","setConnectionStatus","connect","current","close","WebSocket","onopen","onclose","onerror","onmessage","event","data","JSON","parse","prev","error","console","disconnect","sendMessage","msg","readyState","OPEN","send","stringify","warn"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\n\nexport default function useWebSocket(url, options = { manual: false }) {\n  const socketRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n\n  const connect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n\n    socketRef.current = new WebSocket(url);\n\n    socketRef.current.onopen = () => {\n      setConnectionStatus('connected');\n    };\n\n    socketRef.current.onclose = () => {\n      setConnectionStatus('disconnected');\n    };\n\n    socketRef.current.onerror = () => {\n      setConnectionStatus('error');\n    };\n\n    socketRef.current.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        setMessages((prev) => [...prev, data]);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message', error);\n      }\n    };\n  }, [url]);\n\n  const disconnect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n      socketRef.current = null;\n    }\n  }, []);\n\n  const sendMessage = useCallback((msg) => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify(msg));\n    } else {\n      console.warn('WebSocket not connected');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!options.manual) {\n      connect();\n    }\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect, options.manual]);\n\n  return { messages, sendMessage, connectionStatus, connect, disconnect };\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAEhE,eAAe,SAASC,YAAYA,CAACC,GAAG,EAAEC,OAAO,GAAG;EAAEC,MAAM,EAAE;AAAM,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EAExE,MAAMY,OAAO,GAAGX,WAAW,CAAC,MAAM;IAChC,IAAIM,SAAS,CAACM,OAAO,EAAE;MACrBN,SAAS,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC;IAC3B;IAEAP,SAAS,CAACM,OAAO,GAAG,IAAIE,SAAS,CAACZ,GAAG,CAAC;IAEtCI,SAAS,CAACM,OAAO,CAACG,MAAM,GAAG,MAAM;MAC/BL,mBAAmB,CAAC,WAAW,CAAC;IAClC,CAAC;IAEDJ,SAAS,CAACM,OAAO,CAACI,OAAO,GAAG,MAAM;MAChCN,mBAAmB,CAAC,cAAc,CAAC;IACrC,CAAC;IAEDJ,SAAS,CAACM,OAAO,CAACK,OAAO,GAAG,MAAM;MAChCP,mBAAmB,CAAC,OAAO,CAAC;IAC9B,CAAC;IAEDJ,SAAS,CAACM,OAAO,CAACM,SAAS,GAAIC,KAAK,IAAK;MACvC,IAAI;QACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnCZ,WAAW,CAAEe,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,IAAI,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;EACH,CAAC,EAAE,CAACtB,GAAG,CAAC,CAAC;EAET,MAAMwB,UAAU,GAAG1B,WAAW,CAAC,MAAM;IACnC,IAAIM,SAAS,CAACM,OAAO,EAAE;MACrBN,SAAS,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC;MACzBP,SAAS,CAACM,OAAO,GAAG,IAAI;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,WAAW,GAAG3B,WAAW,CAAE4B,GAAG,IAAK;IACvC,IAAItB,SAAS,CAACM,OAAO,IAAIN,SAAS,CAACM,OAAO,CAACiB,UAAU,KAAKf,SAAS,CAACgB,IAAI,EAAE;MACxExB,SAAS,CAACM,OAAO,CAACmB,IAAI,CAACV,IAAI,CAACW,SAAS,CAACJ,GAAG,CAAC,CAAC;IAC7C,CAAC,MAAM;MACLH,OAAO,CAACQ,IAAI,CAAC,yBAAyB,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,OAAO,CAACC,MAAM,EAAE;MACnBO,OAAO,CAAC,CAAC;IACX;IACA,OAAO,MAAM;MACXe,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACf,OAAO,EAAEe,UAAU,EAAEvB,OAAO,CAACC,MAAM,CAAC,CAAC;EAEzC,OAAO;IAAEG,QAAQ;IAAEoB,WAAW;IAAElB,gBAAgB;IAAEE,OAAO;IAAEe;EAAW,CAAC;AACzE;AAACrB,EAAA,CA3DuBJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}