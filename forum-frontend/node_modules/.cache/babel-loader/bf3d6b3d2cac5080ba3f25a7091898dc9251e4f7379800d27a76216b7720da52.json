{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useCallback } from 'react';\nexport default function useWebSocket(url, options = {\n  manual: false\n}) {\n  _s();\n  const socketRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const connectCalled = useRef(false); // <--- добавляем!\n\n  const connect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n    socketRef.current = new WebSocket(url);\n    connectCalled.current = true; // <--- отмечаем, что connect вызван\n\n    socketRef.current.onopen = () => {\n      setConnectionStatus('connected');\n    };\n    socketRef.current.onclose = () => {\n      setConnectionStatus('disconnected');\n    };\n    socketRef.current.onerror = err => {\n      console.error('WebSocket error:', err);\n      setConnectionStatus('error');\n    };\n    socketRef.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        setMessages(prev => [...prev, data]);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message', error);\n      }\n    };\n  }, [url]);\n  const disconnect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n      socketRef.current = null;\n      connectCalled.current = false; // сбрасываем\n    }\n  }, []);\n  const sendMessage = useCallback(msg => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify(msg));\n    } else {\n      console.warn('WebSocket not connected');\n    }\n  }, []);\n  useEffect(() => {\n    if (!options.manual) {\n      connect();\n    }\n    return () => {\n      if (connectCalled.current) {\n        // <--- проверяем!\n        disconnect();\n      }\n    };\n  }, [connect, disconnect, options.manual]);\n  return {\n    messages,\n    sendMessage,\n    connectionStatus,\n    connect,\n    disconnect\n  };\n}\n_s(useWebSocket, \"i1kiHNDCrfoPmlFYdWoQWrtTAGI=\");","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useWebSocket","url","options","manual","_s","socketRef","messages","setMessages","connectionStatus","setConnectionStatus","connectCalled","connect","current","close","WebSocket","onopen","onclose","onerror","err","console","error","onmessage","event","data","JSON","parse","prev","disconnect","sendMessage","msg","readyState","OPEN","send","stringify","warn"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\n\nexport default function useWebSocket(url, options = { manual: false }) {\n  const socketRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const connectCalled = useRef(false); // <--- добавляем!\n\n  const connect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n\n    socketRef.current = new WebSocket(url);\n    connectCalled.current = true; // <--- отмечаем, что connect вызван\n\n    socketRef.current.onopen = () => {\n      setConnectionStatus('connected');\n    };\n\n    socketRef.current.onclose = () => {\n      setConnectionStatus('disconnected');\n    };\n\n    socketRef.current.onerror = (err) => {\n      console.error('WebSocket error:', err);\n      setConnectionStatus('error');\n    };\n\n    socketRef.current.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        setMessages((prev) => [...prev, data]);\n      } catch (error) {\n        console.error('Failed to parse WebSocket message', error);\n      }\n    };\n  }, [url]);\n\n  const disconnect = useCallback(() => {\n    if (socketRef.current) {\n      socketRef.current.close();\n      socketRef.current = null;\n      connectCalled.current = false; // сбрасываем\n    }\n  }, []);\n\n  const sendMessage = useCallback((msg) => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(JSON.stringify(msg));\n    } else {\n      console.warn('WebSocket not connected');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!options.manual) {\n      connect();\n    }\n    return () => {\n      if (connectCalled.current) { // <--- проверяем!\n        disconnect();\n      }\n    };\n  }, [connect, disconnect, options.manual]);\n\n  return { messages, sendMessage, connectionStatus, connect, disconnect };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}